implement these components
  preview alert component
    add text animations
      cycle fonts
      bounce
      tween like the starlabs animation
  upload media
    enable video uploads
    save file as MediaType object
    audio uploads
  fix animation component

create widget page
  recieve donation alerts
  test donation alerts

polish websocket client
  get wallet address
  send alerts based on user settings
  handle multiple users

handle stream data
  keep tabs on donations, senders, amounts
  top donation, all time top donation
  message data




notes about media upload
  kind of redundant to have 4 instance of the uploadorlink component for each state
  audio/visual
  link/upload/select

  let's have a showSelectMedia state
  let's also have writable stores for these values

  export let selectType = writable<'audio' | 'visual'>('visual');
  export let selectMode = writable<'upload' | 'link' | 'select'>('select');

this way i can have 1 component for the uploadorlinkmodal and then from within the modal we can change to link/upload/select


ðŸª² handle remove media
ðŸª² enable audio selection
  updated functions
  need to implement similar logic to the video selections
  make sure notification sound ends when alert ends
ðŸª² destroy prev audio when new plays
ðŸª² refactor update function to apply sound to the alert sound
  change the type and the default alert
  make sure that the update function targets that
!TODO enable audio link + upload
  audio upload needs to go the to the db,
  be handled as a mediaItem


idea i need to jot
modal in
tabs fly in 1 by 1 at increasings speeds with backout easing

everything still works except for the 
  animation presets
  upload audio
  weight doesnt show?
  sliders dont show current number until update function is called
  link audio? do people even use link audio?
    links are common for images but probably not audio
once i get this working then i can keep at the websocket and figure out how to handle it for multiple users

get rid of fonts that don't work
get more fonts that do work

create widget component that can listen to events from the websocket client and choose the appropriate donation alert to play
widget can handle preview alerts to


handle widgets

todo

âœ… get rid of audio console logs
âœ… fully implement animation controls component
âœ… make sure the copy widget url button goes to /widgets/alerts/[userId]
show advanced animations if the user is using them.
complete the donation alerts component
  pass in user data
  listent to stream events
  trigger the correct alerts based on donations
create button that sends preview donation to widget
  let user choose which event to send
  random donation
  specific gift
  donation amount
    need to calculate the $DMT values of each gift
  donation is exactly
    the user probably won't use this often 
    but it would be cool to have an alert for 
    someone donating a specific amount of gifts? 
    or a specific amount of a specific gift...maybe
figure out how to handle the top donations by keeping track of donations within a certain period
  top donation of the day?
  oh wait this should be it's own widget box that can be displayed on stream on it's own an alert might be cool if a new top donation is reached but
  the main thing would be to have it on stream for awhile so people can see

endpreview todo
animate highlighted text

sep 5 todo

setup correct ws in component
need to cahnge the event trigger to match the ws events










donation alert component doesn't seem to be affected by the alert duration so i need to implement that asap

the text is being squished out of the frame

accounting for the out duration is good and all but now the timing is off from the preview
